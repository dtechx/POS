/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package possystem.ui.billing;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import possystem.control.BillingControl;
import possystem.control.ItemUtility;
import possystem.core.Item;
import possystem.ui.util.NumericJTextField;

/**
 *
 * @author dushantha.eranga
 */
public class BillingWindow extends javax.swing.JFrame
{
    //private Item currentItem;
    
    private final int GO_TO_ENTER_CASH = KeyEvent.VK_DOWN;
    private final int BACK_TO_ENTER_ITEM = KeyEvent.VK_UP;
    private final int GO_RIGHT = KeyEvent.VK_RIGHT;
    private final int GO_LEFT = KeyEvent.VK_LEFT;
    private final int ENTER_KEY = KeyEvent.VK_ENTER;
    private final int NEW_TRANSACTION = KeyEvent.VK_MULTIPLY;
    

    /**
     * Creates new form SummaryWindow
     */
    public BillingWindow()
    {
        initComponents();
        lblItemCodeError.setVisible(false);
        
        // Show All Items in Text Area
        showAllItems();
        
        // Add all items to hashmap having userCode as the key
        BillingControl.generateHashMap();
        
        // Initialize Item Table
        itemTable.initializeItemTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        txtItemCode = new NumericJTextField(3);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtQty = new NumericJTextField(3);
        lblItemCodeError = new javax.swing.JLabel();
        btnUndo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCash = new NumericJTextField(5);
        jLabel4 = new javax.swing.JLabel();
        lblBalance = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        itemTable = new possystem.ui.common.ItemTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlistAllItems = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Enter Item and Qty"));

        txtItemCode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtItemCodeActionPerformed(evt);
            }
        });
        txtItemCode.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                txtItemCodeKeyReleased(evt);
            }
        });

        jLabel1.setText("Item Code");

        jLabel2.setText("Qty");

        txtQty.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtQtyActionPerformed(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                txtQtyKeyReleased(evt);
            }
        });

        lblItemCodeError.setForeground(new java.awt.Color(255, 0, 0));
        lblItemCodeError.setText("Error");

        btnUndo.setText("Undo");
        btnUndo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUndoActionPerformed(evt);
            }
        });
        btnUndo.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                btnUndoKeyReleased(evt);
            }
        });

        jLabel3.setText("Cash");

        txtCash.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCash.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtCashActionPerformed(evt);
            }
        });
        txtCash.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                txtCashKeyReleased(evt);
            }
        });

        jLabel4.setText("Balance");

        lblBalance.setBackground(new java.awt.Color(204, 204, 255));
        lblBalance.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblBalance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBalance.setText("0.00 Rs");

        jLabel6.setText("Rs");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(txtQty)
                    .addComponent(txtCash)
                    .addComponent(lblBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblItemCodeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUndo, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblItemCodeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtQty)
                        .addComponent(btnUndo))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(lblBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Bill"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemTable, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(itemTable, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Items"));

        jlistAllItems.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jlistAllItems.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jlistAllItemsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jlistAllItems);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtItemCodeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtItemCodeActionPerformed
    {//GEN-HEADEREND:event_txtItemCodeActionPerformed
        // TODO add your handling code here:
        enterItem();
    }//GEN-LAST:event_txtItemCodeActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtQtyActionPerformed
    {//GEN-HEADEREND:event_txtQtyActionPerformed
        // TODO add your handling code here:
        // Add DailyRecordItem to table
        enterQuantity();
    }//GEN-LAST:event_txtQtyActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUndoActionPerformed
    {//GEN-HEADEREND:event_btnUndoActionPerformed
        // TODO add your handling code here:
        undoEntry();
    }//GEN-LAST:event_btnUndoActionPerformed

    private void jlistAllItemsMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jlistAllItemsMouseClicked
    {//GEN-HEADEREND:event_jlistAllItemsMouseClicked
        // TODO add your handling code here:
        promptSelectedItem();
    }//GEN-LAST:event_jlistAllItemsMouseClicked

    private void txtItemCodeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtItemCodeKeyReleased
    {//GEN-HEADEREND:event_txtItemCodeKeyReleased
        // TODO add your handling code here:
        moveCursor(evt);
    }//GEN-LAST:event_txtItemCodeKeyReleased

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtQtyKeyReleased
    {//GEN-HEADEREND:event_txtQtyKeyReleased
        // TODO add your handling code here:
        moveCursor(evt);
    }//GEN-LAST:event_txtQtyKeyReleased

    private void txtCashActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtCashActionPerformed
    {//GEN-HEADEREND:event_txtCashActionPerformed
        // TODO add your handling code here:
        showBalance();
    }//GEN-LAST:event_txtCashActionPerformed

    private void txtCashKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtCashKeyReleased
    {//GEN-HEADEREND:event_txtCashKeyReleased
        // TODO add your handling code here:
        //moveCursor(evt);
        cashFieldKeyRelease(evt);
    }//GEN-LAST:event_txtCashKeyReleased

    private void btnUndoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_btnUndoKeyReleased
    {//GEN-HEADEREND:event_btnUndoKeyReleased
        // TODO add your handling code here:
        undoButtonKeyRelease(evt);
    }//GEN-LAST:event_btnUndoKeyReleased

//    /**
//     * @param args the command line arguments
//     */
//    
//    public static void main(String args[])
//    {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try
//        {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
//            {
//                if ("Nimbus".equals(info.getName()))
//                {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        }
//        catch (ClassNotFoundException ex)
//        {
//            java.util.logging.Logger.getLogger(DailyRecordWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        catch (InstantiationException ex)
//        {
//            java.util.logging.Logger.getLogger(DailyRecordWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        catch (IllegalAccessException ex)
//        {
//            java.util.logging.Logger.getLogger(DailyRecordWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        catch (javax.swing.UnsupportedLookAndFeelException ex)
//        {
//            java.util.logging.Logger.getLogger(DailyRecordWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable()
//        {
//            public void run()
//            {
//                new DailyRecordWindow().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUndo;
    private possystem.ui.common.ItemTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList jlistAllItems;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblItemCodeError;
    private javax.swing.JTextField txtCash;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables

    /**
     * Show all Items in List
     */
    private void showAllItems()
    {
        DefaultListModel<Item> listModel = new DefaultListModel<>();
        
        for (Item item : ItemUtility.getItemList())
        {
            listModel.addElement(item);
        }
        
        jlistAllItems.setModel(listModel);
    }
    
    /*
    private void showAllItems()
    {
        jtaItemList.append("Item ID" + "\t" + "Unit Price" + "\t" + "Code" + "\t" + "Name" + "\n");
        for (Item item : ItemUtility.getItemList())
        {
            jtaItemList.append(item.getItemID() + "\t" + item.getUnitPrice() + "\t" + item.getUserCode()+ "\t" + item.getItemName());
            jtaItemList.append("\n");
        }
    }
    */

    /**
     * Generate HasMap having all the items in ItemUtility
     */
    
    
    /**
     * Enter Item Code
     */
    private void enterItem()
    {
        boolean foundItem = BillingControl.setCurrentItem(txtItemCode.getText());
        if(foundItem)
        {
            txtQty.requestFocus();
            txtQty.selectAll();
            showItemCodeError(false);
            
            jlistAllItems.setSelectedIndex(BillingControl.getCurrentItem().getItemID() - 1);
        }
        else
        {
            // Error occurred
            txtItemCode.selectAll();
            showItemCodeError(true);
        }
    }

    /**
     * Enter Quantity
     */
    private void enterQuantity()
    {
        int qty = Integer.parseInt(txtQty.getText());
        BillingControl.addItemRecord(qty);

        itemTable.updateTable();
        txtItemCode.requestFocus();
        txtItemCode.selectAll();
    }
    
    /**
     * Show Item Code Error
     * @param flag 
     */
    private void showItemCodeError(boolean flag)
    {
        lblItemCodeError.setVisible(flag);
        if(flag)
        {
            txtItemCode.setBackground(Color.PINK);
        }
        else
        {
            txtItemCode.setBackground(Color.WHITE);
        }
    }

    /**
     * Undo Entry adding
     */
    private void undoEntry()
    {
        BillingControl.undoEntry();
        itemTable.updateTable();
        txtItemCode.requestFocus();
        showBalance();
    }

    /**
     * Prompt selected item to Item Code text field
     */
    private void promptSelectedItem()
    {
        Item item = (Item)jlistAllItems.getSelectedValue();
        txtItemCode.setText(item.getUserCode());
        enterItem();
    }

    private void showBalance()
    {
        if(!txtCash.getText().isEmpty())
        {
            int cash = Integer.parseInt(txtCash.getText());
            int balance = BillingControl.getBalance(cash);
            lblBalance.setText(Integer.toString(balance) + ".00 Rs");
        }
    }
    
    private void moveCursor(KeyEvent evt)
    {
        if(evt.getKeyCode() == GO_TO_ENTER_CASH)
        {
            txtCash.requestFocus();
        }
        else if(evt.getKeyCode() == BACK_TO_ENTER_ITEM)
        {
            txtItemCode.requestFocus();
        }
        else if(evt.getKeyCode() == GO_RIGHT)
        {
            btnUndo.requestFocus();
        }
        else if(evt.getKeyCode() == GO_LEFT)
        {
            txtItemCode.requestFocus();
        }
        
    }
    
    private void undoButtonKeyRelease(KeyEvent evt)
    {
        if(evt.getKeyCode() == ENTER_KEY)
        {
            undoEntry();
        }
        else
        {
            moveCursor(evt);
        }
    }
    
    private void cashFieldKeyRelease(KeyEvent evt)
    {
        //if(KeyPressUtil.isDoublePress(evt) && evt.getKeyCode() == ENTER_KEY)
        if(evt.getKeyCode() == NEW_TRANSACTION)
        {
            clearAll();
        }
        else
        {
            moveCursor(evt);
        }
    }

    /**
     * Clear transaction information
     */
    private void clearAll()
    {
        txtCash.setText("");
        txtItemCode.setText("");
        txtQty.setText("");
        BillingControl.clearAll();
        this.itemTable.updateTable();
        txtItemCode.requestFocus();
    }
    
    
}
